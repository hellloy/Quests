@page "/myquests/details/{Id:int}"
@using Quests.Client.Services
@using Quests.Shared.Entities.Models
@using Quests.Shared.VM
@using System.Timers
@using CurrieTechnologies.Razor.SweetAlert2
@inject IMyQuestDataService QuestDataService
@inject IMyQuestStepDataService QuestStepDataService
@inject SweetAlertService SweetAlertService
@inject NavigationManager NavigationManager


    

<div class="flex-row-fluid ml-lg-8">
    <!--begin::Section-->
    <!--begin::Charts Widget 9-->
    <!--begin::Card-->
    <div class="card card-custom gutter-b gutter-b">
        <div class="card-body d-flex flex-column flex-md-row flex-lg-column flex-xxl-row p-0 overflow-hidden">
            <div class="d-flex flex-column flex-root" style="position: relative;">
                <div class="m-11 d-flex align-items-end">
                    <h3 class="font-size-h1 text-dark font-weight-bolder mr-3 mb-0">@MyQuestVm.QuestStep.Name</h3>
                    <div class="font-size-h3 text-muted">@MyQuestVm.MyQuest.Quest.Name</div>
                </div>
                <div class="bgi-no-repeat bgi-position-center bgi-size-cover h-500px  mw-100 w-100% rounded-bottom" style="background-image: url('@MyQuestVm.QuestStep.Img')"></div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-xl-4">
            <!--begin::Stats Widget 30-->
            <div class="card card-custom bg-info card-stretch gutter-b">
                <!--begin::Body-->
                <div class="card-body">
                    <span class="svg-icon svg-icon-2x svg-icon-white">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <rect x="0" y="0" width="24" height="24" />
                                <path d="M2,6 L21,6 C21.5522847,6 22,6.44771525 22,7 L22,17 C22,17.5522847 21.5522847,18 21,18 L2,18 C1.44771525,18 1,17.5522847 1,17 L1,7 C1,6.44771525 1.44771525,6 2,6 Z M11.5,16 C13.709139,16 15.5,14.209139 15.5,12 C15.5,9.790861 13.709139,8 11.5,8 C9.290861,8 7.5,9.790861 7.5,12 C7.5,14.209139 9.290861,16 11.5,16 Z" fill="#000000" opacity="0.3" transform="translate(11.500000, 12.000000) rotate(-345.000000) translate(-11.500000, -12.000000) " />
                                <path d="M2,6 L21,6 C21.5522847,6 22,6.44771525 22,7 L22,17 C22,17.5522847 21.5522847,18 21,18 L2,18 C1.44771525,18 1,17.5522847 1,17 L1,7 C1,6.44771525 1.44771525,6 2,6 Z M11.5,16 C13.709139,16 15.5,14.209139 15.5,12 C15.5,9.790861 13.709139,8 11.5,8 C9.290861,8 7.5,9.790861 7.5,12 C7.5,14.209139 9.290861,16 11.5,16 Z M11.5,14 C12.6045695,14 13.5,13.1045695 13.5,12 C13.5,10.8954305 12.6045695,10 11.5,10 C10.3954305,10 9.5,10.8954305 9.5,12 C9.5,13.1045695 10.3954305,14 11.5,14 Z" fill="#000000" />
                            </g>
                        </svg>
                    </span>
                    <span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 d-block">@MyQuestVm.QuestStep.Points очки</span>
                    <span class="font-weight-bold text-white font-size-sm">Цена</span>
                </div>
                <!--end::Body-->
            </div>
            <!--end::Stats Widget 30-->
        </div>
        <div class="col-xl-4">
            <!--begin::Stats Widget 31-->
            <div class="card card-custom bg-danger card-stretch gutter-b">
                <!--begin::Body-->
                <div class="card-body">
                    <span class="svg-icon svg-icon-2x svg-icon-white">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <polygon points="0 0 24 0 24 24 0 24" />
                                <path d="M8,7 C7.44771525,7 7,6.55228475 7,6 C7,5.44771525 7.44771525,5 8,5 L16,5 C18.209139,5 20,6.790861 20,9 C20,11.209139 18.209139,13 16,13 L8,13 C6.8954305,13 6,13.8954305 6,15 C6,16.1045695 6.8954305,17 8,17 L17,17 C17.5522847,17 18,17.4477153 18,18 C18,18.5522847 17.5522847,19 17,19 L8,19 C5.790861,19 4,17.209139 4,15 C4,12.790861 5.790861,11 8,11 L16,11 C17.1045695,11 18,10.1045695 18,9 C18,7.8954305 17.1045695,7 16,7 L8,7 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
                                <path d="M9.79289322,3.79289322 C10.1834175,3.40236893 10.8165825,3.40236893 11.2071068,3.79289322 C11.5976311,4.18341751 11.5976311,4.81658249 11.2071068,5.20710678 L8.20710678,8.20710678 C7.81658249,8.59763107 7.18341751,8.59763107 6.79289322,8.20710678 L3.79289322,5.20710678 C3.40236893,4.81658249 3.40236893,4.18341751 3.79289322,3.79289322 C4.18341751,3.40236893 4.81658249,3.40236893 5.20710678,3.79289322 L7.5,6.08578644 L9.79289322,3.79289322 Z" fill="#000000" fill-rule="nonzero" transform="translate(7.500000, 6.000000) rotate(-270.000000) translate(-7.500000, -6.000000) " />
                                <path d="M18.7928932,15.7928932 C19.1834175,15.4023689 19.8165825,15.4023689 20.2071068,15.7928932 C20.5976311,16.1834175 20.5976311,16.8165825 20.2071068,17.2071068 L17.2071068,20.2071068 C16.8165825,20.5976311 16.1834175,20.5976311 15.7928932,20.2071068 L12.7928932,17.2071068 C12.4023689,16.8165825 12.4023689,16.1834175 12.7928932,15.7928932 C13.1834175,15.4023689 13.8165825,15.4023689 14.2071068,15.7928932 L16.5,18.0857864 L18.7928932,15.7928932 Z" fill="#000000" fill-rule="nonzero" transform="translate(16.500000, 18.000000) scale(1, -1) rotate(270.000000) translate(-16.500000, -18.000000) " />
                            </g>
                        </svg>
                    </span>
                    <span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 d-block">@MyQuestVm.QuestStep.Distance</span>
                    <span class="font-weight-bold text-white font-size-sm">Дистанция в метрах</span>
                </div>
                <!--end::Body-->
            </div>
            <!--end::Stats Widget 31-->
        </div>
        <div class="col-xl-4">
            <!--begin::Stats Widget 32-->
            <div class="card card-custom bg-dark card-stretch gutter-b">
                <!--begin::Body-->
                <div class="card-body">
                    <span class="svg-icon svg-icon-2x svg-icon-white">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                            <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <rect x="0" y="0" width="24" height="24" />
                                <path d="M12,21 C7.581722,21 4,17.418278 4,13 C4,8.581722 7.581722,5 12,5 C16.418278,5 20,8.581722 20,13 C20,17.418278 16.418278,21 12,21 Z" fill="#000000" opacity="0.3" />
                                <path d="M13,5.06189375 C12.6724058,5.02104333 12.3386603,5 12,5 C11.6613397,5 11.3275942,5.02104333 11,5.06189375 L11,4 L10,4 C9.44771525,4 9,3.55228475 9,3 C9,2.44771525 9.44771525,2 10,2 L14,2 C14.5522847,2 15,2.44771525 15,3 C15,3.55228475 14.5522847,4 14,4 L13,4 L13,5.06189375 Z" fill="#000000" />
                                <path d="M16.7099142,6.53272645 L17.5355339,5.70710678 C17.9260582,5.31658249 18.5592232,5.31658249 18.9497475,5.70710678 C19.3402718,6.09763107 19.3402718,6.73079605 18.9497475,7.12132034 L18.1671361,7.90393167 C17.7407802,7.38854954 17.251061,6.92750259 16.7099142,6.53272645 Z" fill="#000000" />
                                <path d="M11.9630156,7.5 L12.0369844,7.5 C12.2982526,7.5 12.5154733,7.70115317 12.5355117,7.96165175 L12.9585886,13.4616518 C12.9797677,13.7369807 12.7737386,13.9773481 12.4984096,13.9985272 C12.4856504,13.9995087 12.4728582,14 12.4600614,14 L11.5399386,14 C11.2637963,14 11.0399386,13.7761424 11.0399386,13.5 C11.0399386,13.4872031 11.0404299,13.4744109 11.0414114,13.4616518 L11.4644883,7.96165175 C11.4845267,7.70115317 11.7017474,7.5 11.9630156,7.5 Z" fill="#000000" />
                            </g>
                        </svg>
                    </span>
                    @*<span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 text-hover-primary d-block">@MyQuestVm.QuestStep.TravelTime.ToString("HH:mm")</span>*@
                <span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 text-hover-primary d-block">
                    @if (ElapsedTime != null)
                    {
                        var s = ElapsedTime.Value.ToString("hh':'mm':'ss");
                        @s
                    }

                </span>
                    <span class="font-weight-bold text-white font-size-sm">Время прохождения</span>
                </div>
                <!--end::Body-->
            </div>
            <!--end::Stats Widget 32-->
        </div>

    </div>
    <!--end:: Card-->
    <!--end:: Charts Widget 9-->
    <!--end::Section-->
    <!--begin::Section-->
    <div class="row">
        <div class="col">
            <!--begin::Stats Widget 33-->
            <!--begin::Card-->
            <div class="card card-custom card-stretch gutter-b">
                <!--begin::Card Body-->
                <div class="card-body">
                    <h3 class="font-weight-bold font-size-h4 text-dark-75 mb-3">Описание</h3>
                    <div class="text-muted font-weight-bold font-size-sm mb-6">Дополнительная информация</div>
                    <div class="font-size-sm mb-6">@((MarkupString)MyQuestVm.QuestStep.Description)</div>

                </div>
                <!--end::Card Body-->
                
            </div>
            <!--end::Card-->
            <!--end::Stats Widget 33-->
        </div>
    </div>
    <!--end::Section-->

    @if (MyQuestVm.QuestStep.VideoCode != null)
    {
        <div class="row">
            <div class="col">
                <!--begin::Section-->
                <!--begin::Advance Table Widget 10-->
                <div class="card card-custom">
                    <!--begin::Header-->
                    <div class="card-header border-0 py-5">
                        <h3 class="card-title align-items-start flex-column">
                            <span class="card-label font-weight-bolder text-dark">Видео</span>
                            <span class="text-muted mt-3 font-weight-bold font-size-sm">Дополнительная информация</span>
                        </h3>

                    </div>
                    <!--end::Header-->
                    <!--begin::Body-->
                    <div class="card-body py-0 pb-8">
                        @((MarkupString)MyQuestVm.QuestStep.VideoCode)
                    </div>
                    <!--end::Body-->
                </div>
                <!--end::Advance Table Widget 10-->
                <!--end::Section-->
            </div>
        </div>



    }
    @if (MyQuestVm.QuestStep.MapCode != null)
    {
        <div class="row mt-8 mb-8">
            <div class="col">
               
                <div class="card card-custom">
                    <!--begin::Header-->
                    <div class="card-header border-0 py-5">
                        <h3 class="card-title align-items-start flex-column">
                            <span class="card-label font-weight-bolder text-dark">Карта</span>
                            <span class="text-muted mt-3 font-weight-bold font-size-sm">Дополнительная информация</span>
                        </h3>

                    </div>
                    <!--end::Header-->
                    <!--begin::Body-->
                    <div class="card-body py-0 pb-8">
                        @((MarkupString)MyQuestVm.QuestStep.MapCode)
                    </div>
                    <!--end::Body-->
                </div>
               
                
                
            </div>
        </div>

    }

    <div class="row">
        <div class="col">
            <!--begin::Stats Widget 33-->
            <!--begin::Card-->
            <div class="card card-custom card-stretch gutter-b">
                <!--begin::Card Body-->
                <div class="card-body">
                    <h3 class="font-weight-bold font-size-h4 text-dark-75 mb-3">Вопрос</h3>
                    <div class="text-muted font-weight-bold font-size-sm mb-6">Для прохождения этапа нужно ответить на этот вопрос</div>
                    <div class="font-size-lg mb-6">@MyQuestVm.QuestStep.Question</div>

                </div>
                <!--end::Card Body-->
                <div class="card-footer row">
                    <div class="col-sm-6 mb-4">
                        <button disabled="@HintBtnDisabled" class="btn btn-lg btn-shadow btn-info btn-block font-weight-bold " @onclick="@ShowHint">
                            @HintBtnText
                        </button>
                    </div>
                    <div class="col-sm-6">
                        <button class="btn btn-lg  btn-shadow btn-success btn-block font-weight-bold"  @onclick="@Answer">
                            Ответить на вопрос
                        </button>
                    </div>


                </div>
            </div>
            <!--end::Card-->
            <!--end::Stats Widget 33-->
        </div>
    </div>
</div>




@code {
    [Parameter]
    public int Id { get; set; }

    private TimeSpan? ElapsedTime { get; set; } = new TimeSpan(0,0,0);

    private MyQuestVm MyQuestVm { get; set; } = new MyQuestVm
    {
        QuestStep = new QuestStep(),
        MyActiveStep = new MyQuestStep(),
        MyQuest = new MyQuest
        {
            Quest = new Quest()
        },

    };

    private string HintBtnText { get; set; }
    private TimeSpan HintEnableBtnPeriod { get; set; } = new TimeSpan(0,0,0,90);
    private bool HintBtnDisabled { get; set; } = true;


    protected override async Task OnInitializedAsync()
    {
        await LoadInfo();
    }

    private async Task LoadInfo()
    {
        if (Id != 0)
        {
            MyQuestVm = await QuestDataService.Get(Id);
            StateHasChanged();
            await TimerTask();
        }
    }

    async Task TimerTask()
    {

        while (DateTime.Now > MyQuestVm.MyActiveStep.StartDate)
        {
            await Task.Delay(1000);
            ElapsedTime = DateTime.Now - MyQuestVm.MyActiveStep.StartDate;

            if (HintBtnDisabled)
            {
                if (ElapsedTime >= HintEnableBtnPeriod)
                {
                    HintBtnDisabled = false;
                    HintBtnText = "Посмотреть подсказку";
                }
                else
                {
                    var s = (int)(HintEnableBtnPeriod - ElapsedTime).Value.TotalSeconds;
                    HintBtnText = $"Подсказка будет доступна через ({s})";
                }
            }


            StateHasChanged();
        }

        await Task.CompletedTask;
        ElapsedTime = new TimeSpan(0,0,0);
        StateHasChanged();
    }

    private void ShowHint()
    {
        QuestStepDataService.Get(MyQuestVm.MyActiveStep.Id);
    }

    private async void Answer()
    {
        var answer = await SweetAlertService.FireAsync(new SweetAlertOptions
        {
            Icon = SweetAlertIcon.Question,
            Title = "Ответ",
            Input = SweetAlertInputType.Text,
            InputPlaceholder = "Введите ответ",
            ShowCancelButton = true,
            ConfirmButtonText = "Ок",
            CancelButtonText = "Отмена"
        });

        if (!string.IsNullOrEmpty(answer.Value))
        {
            AnswerVM answerVm = new AnswerVM
            {
                MyQuestStepId = MyQuestVm.MyActiveStep.Id,
                Message = answer.Value
            };
           var result = await QuestStepDataService.Post(answerVm);
            if (result.Result)
            {
                if (result.Finish)
                {
                    NavigationManager.NavigateTo("/myQuests");
                }
                else
                {
                    await LoadInfo();
                    StateHasChanged();
                }
                
            }
        }

    }
}
