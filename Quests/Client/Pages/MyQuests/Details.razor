@page "/myquests/details/{Id:int}"
@using Quests.Client.Services
@using Quests.Shared.Entities.Models
@using Quests.Shared.VM
@using System.Timers
@using CurrieTechnologies.Razor.SweetAlert2
@inject IMyQuestDataService QuestDataService
@inject IMyQuestStepDataService QuestStepDataService
@inject SweetAlertService SweetAlertService
@inject NavigationManager NavigationManager


    

<div class="flex-row-fluid ml-lg-8">
    <!--begin::Section-->
    <!--begin::Charts Widget 9-->
    <!--begin::Card-->
    <div class="card card-custom gutter-b gutter-b">
        <div class="card-body d-flex flex-column flex-md-row flex-lg-column flex-xxl-row p-0 overflow-hidden">
            <div class="d-flex flex-column flex-root" style="position: relative;">
                <div class="m-11 d-flex align-items-end">
                    <h3 class="font-size-h1 text-dark font-weight-bolder mr-3 mb-0">@MyQuestVm.QuestStep.Name <small class="text-muted">@MyQuestVm.MyQuest.Quest.Name </small></h3>
                    </div>
                <div class="bgi-no-repeat bgi-position-center bgi-size-cover h-500px  mw-100 w-100% rounded-bottom" style="background-image: url('@MyQuestVm.QuestStep.Img')"></div>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-xl-4">
            <!--begin::Stats Widget 30-->
            <div class="card card-custom bg-info card-stretch gutter-b">
                <!--begin::Body-->
                <div class="card-body">
                    
                    <span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 d-block">@MyQuestVm.QuestStep.Points очки</span>
                    
                </div>
                <!--end::Body-->
            </div>
            <!--end::Stats Widget 30-->
        </div>
        <div class="col-xl-4">
            <!--begin::Stats Widget 31-->
            <div class="card card-custom bg-danger card-stretch gutter-b">
                <!--begin::Body-->
                <div class="card-body">
                    
                    <span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 d-block">@MyQuestVm.QuestStep.Distance <span class="font-weight-bold text-white font-size-sm">Дистанция в метрах</span></span>
                    
                </div>
                <!--end::Body-->
            </div>
            <!--end::Stats Widget 31-->
        </div>
        <div class="col-xl-4">
            <!--begin::Stats Widget 32-->
            <div class="card card-custom bg-dark card-stretch gutter-b">
                <!--begin::Body-->
                <div class="card-body">
                    
                    @*<span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 text-hover-primary d-block">@MyQuestVm.QuestStep.TravelTime.ToString("HH:mm")</span>*@
                    <span class="card-title font-weight-bolder text-white font-size-h2 mb-0 mt-6 text-hover-primary d-block">
                        @if (ElapsedTime != null)
                        {
                            var s = ElapsedTime.Value.ToString("hh':'mm':'ss");
                            @s
                        }
                        <span class="font-weight-bold text-white font-size-sm">Время прохождения</span>
                    </span>
                    
                </div>
                <!--end::Body-->
            </div>
            <!--end::Stats Widget 32-->
        </div>

    </div>
    <!--end:: Card-->
    <!--end:: Charts Widget 9-->
    <!--end::Section-->
    <!--begin::Section-->
    <div class="row">
        <div class="col">
            <!--begin::Stats Widget 33-->
            <!--begin::Card-->
            <div class="card card-custom card-stretch gutter-b">
                <!--begin::Card Body-->
                <div class="card-body">
                    <h3 class="font-weight-bold font-size-h4 text-dark-75 mb-3">Описание</h3>
                    <div class="text-muted font-weight-bold font-size-sm mb-6">Дополнительная информация</div>
                    <div class="font-size-sm mb-6">@((MarkupString)MyQuestVm.QuestStep.Description)</div>

                </div>
                <!--end::Card Body-->
                
            </div>
            <!--end::Card-->
            <!--end::Stats Widget 33-->
        </div>
    </div>
    <!--end::Section-->

    @if (MyQuestVm.QuestStep.VideoCode != null)
    {
        <div class="row">
            <div class="col">
                <!--begin::Section-->
                <!--begin::Advance Table Widget 10-->
                <div class="card card-custom">
                    <!--begin::Header-->
                    <div class="card-header border-0 py-5">
                        <h3 class="card-title align-items-start flex-column">
                            <span class="card-label font-weight-bolder text-dark">Видео</span>
                            <span class="text-muted mt-3 font-weight-bold font-size-sm">Дополнительная информация</span>
                        </h3>

                    </div>
                    <!--end::Header-->
                    <!--begin::Body-->
                    <div class="card-body py-0 pb-8">
                        @((MarkupString)MyQuestVm.QuestStep.VideoCode)
                    </div>
                    <!--end::Body-->
                </div>
                <!--end::Advance Table Widget 10-->
                <!--end::Section-->
            </div>
        </div>



    }
    @if (MyQuestVm.QuestStep.MapCode != null)
    {
        <div class="row mt-8 mb-8">
            <div class="col">
               
                <div class="card card-custom">
                    <!--begin::Header-->
                    <div class="card-header border-0 py-5">
                        <h3 class="card-title align-items-start flex-column">
                            <span class="card-label font-weight-bolder text-dark">Карта</span>
                            <span class="text-muted mt-3 font-weight-bold font-size-sm">Дополнительная информация</span>
                        </h3>

                    </div>
                    <!--end::Header-->
                    <!--begin::Body-->
                    <div class="card-body py-0 pb-8">
                        @((MarkupString)MyQuestVm.QuestStep.MapCode)
                    </div>
                    <!--end::Body-->
                </div>
               
                
                
            </div>
        </div>

    }

    <div class="row">
        <div class="col">
            <!--begin::Stats Widget 33-->
            <!--begin::Card-->
            <div class="card card-custom card-stretch gutter-b">
                <!--begin::Card Body-->
                <div class="card-body">
                    <h3 class="font-weight-bold font-size-h4 text-dark-75 mb-3">Вопрос</h3>
                    <div class="text-muted font-weight-bold font-size-sm mb-6">Для прохождения этапа нужно ответить на этот вопрос</div>
                    <div class="font-size-lg mb-6">@MyQuestVm.QuestStep.Question</div>

                </div>
                <!--end::Card Body-->
                <div class="card-footer row">
                    <div class="col-sm-6 mb-4">
                        <button disabled="@HintBtnDisabled" class="btn btn-lg btn-shadow btn-info btn-block font-weight-bold " @onclick="@ShowHint">
                            @HintBtnText
                        </button>
                    </div>
                    <div class="col-sm-6">
                        <button class="btn btn-lg  btn-shadow btn-success btn-block font-weight-bold"  @onclick="@Answer">
                            Ответить на вопрос
                        </button>
                    </div>


                </div>
            </div>
            <!--end::Card-->
            <!--end::Stats Widget 33-->
        </div>
    </div>
</div>




@code {

    [Parameter]

    public int Id { get; set; }

    private TimeSpan? ElapsedTime { get; set; } = new TimeSpan(0,0,0);

    private MyQuestVm MyQuestVm { get; set; } = new MyQuestVm
    {
        QuestStep = new QuestStep(),
        MyActiveStep = new MyQuestStep{},
        MyQuest = new MyQuest
        {
            Quest = new Quest(),

        },

    };

    private string HintBtnText { get; set; } = "Посмотреть подсказку";
    private TimeSpan HintEnableBtnPeriod { get; set; } = new TimeSpan(0,0,0,90);
    private bool HintBtnDisabled { get; set; } = true;


    protected override async Task OnInitializedAsync()
    {
        await LoadInfo();
    }

    protected async Task LoadInfo()
    {
        if (Id != 0)
        {
            MyQuestVm = await QuestDataService.Get(Id);
            await TimerTask();
        }
    }


    async Task TimerTask()
    {

        while (DateTime.Now > MyQuestVm.MyActiveStep.StartDate)
        {
            Console.WriteLine(DateTime.Now > MyQuestVm.MyActiveStep.StartDate);
            await Task.Delay(1000);
            ElapsedTime = DateTime.Now - MyQuestVm.MyActiveStep.StartDate;

            if (HintBtnDisabled)
            {
                if (ElapsedTime >= HintEnableBtnPeriod)
                {
                    HintBtnDisabled = false;
                    HintBtnText = "Посмотреть подсказку";

                }
                else
                {
                    var s = (int) (HintEnableBtnPeriod - ElapsedTime).Value.TotalSeconds;
                    HintBtnText = $"Подсказка будет доступна через ({s})";

                }
            }
            StateHasChanged();
        }

        await Task.CompletedTask;
        ElapsedTime = new TimeSpan(0,0,0);
        StateHasChanged();
    }

    private void ShowHint()
    {
        QuestStepDataService.Get(MyQuestVm.MyActiveStep.Id);
    }

    private async void Answer()
    {
        var answer = await SweetAlertService.FireAsync(new SweetAlertOptions
        {
            Icon = SweetAlertIcon.Question,
            Title = "Ответ",
            Input = SweetAlertInputType.Text,
            InputPlaceholder = "Введите ответ",
            ShowCancelButton = true,
            ConfirmButtonText = "Ок",
            CancelButtonText = "Отмена"
        });

        if (!string.IsNullOrEmpty(answer.Value))
        {
            AnswerVM answerVm = new AnswerVM
            {
                MyQuestStepId = MyQuestVm.MyActiveStep.Id,
                Message = answer.Value
            };
            var result = await QuestStepDataService.Post(answerVm);
            if (result.Result)
            {
                if (result.Finish)
                {
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    await LoadInfo();
                    StateHasChanged();
                }

            }
        }

    }
}
