@page "/payment"
@page "/payment/{Points:int}/{QuestId:int}"
@using System.ComponentModel.DataAnnotations
@using Quests.Shared.VM
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<div class="card card-custom card-stretch gutter-b">
    <div class="card-body d-flex p-0">
        <div class="flex-grow-1 p-20 pb-40 card-rounded flex-grow-1 bgi-no-repeat" style="background-position: calc(100% + 0.5rem) bottom;
                                      background-size: 50% auto;
                                      background-image: url(/assets/media/svg/illustrations/login-visual-1.svg)">
            <h2 class="text-dark pb-5 font-weight-bolder">Пополнение счета</h2>
            <p class="text-dark-50 pb-5 font-size-h5">
                Доступна оплата через сервис RoboKassa
                <br>Возможность оплатить картой
                <br>или через популярные платежные сервисы.

            </p>
            <EditForm Model="@_paymentForm" OnValidSubmit="@OnPayment">
                <InputNumber @bind-Value="_paymentForm.Sum" class="form-control form-control-solid h-auto py-7 px-6 rounded-lg border-0 col-sm-6 no-spinner no-gutters" />
                <button type="submit" class="btn btn-success font-weight-bold font-size-h3 px-12 py-5 px-6 mt-10 col-sm-6">Пополнить</button>
            </EditForm>
            </div>
    </div>
</div>



@code {

    [Parameter]
    public int Points { get; set; }
    [Parameter]
    public int QuestId { get; set; }

    PaymentForm _paymentForm = new PaymentForm();


    protected override void OnInitialized()
    {
        if (Points != 0)
            _paymentForm.Sum = Points;
    }

    private async Task OnPayment()
    {
        var invoice =  await HttpClient.GetFromJsonAsync<RbkMoneyInvoiceResponse>("api/Payment/" + _paymentForm.Sum);

        if (invoice != null) await JSRuntime.InvokeVoidAsync("RbkMoneyCheckout", invoice.invoice.id, invoice.invoiceAccessToken.payload, DotNetObjectReference.Create(this));
    }


    public class PaymentForm
    {
        [Required]
        public int Sum { get; set; } = 1000;
    }

    [JSInvokable]
    public void InvokeMethod()
    {
        if (QuestId != 0)
        {
            NavigationManager.NavigateTo("/quest/details/"+QuestId);
        }
        NavigationManager.NavigateTo("/");
    }

}
