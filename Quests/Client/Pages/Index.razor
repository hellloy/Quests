@page "/"
@using Quests.Client.Services
@using CurrieTechnologies.Razor.SweetAlert2
@inject IQuestDataService QuestDataService
@inject IMyQuestDataService MyQuestDataService
@inject NavigationManager NavManager
@inject IUsersDataService UsersDataService
@inject SweetAlertService SweetAlertService


<div class="row">
    @foreach (var quest in Quests)
    {
        var detailsLink = "/quest/details/" + quest.Id;
        <div class="col-md-6">
            <div class="card card-custom card-stretch gutter-b">
                <!--begin::Card Body-->
                <div class="card-body d-flex rounded bg-primary p-12 flex-column flex-md-row flex-lg-column flex-xxl-row bgi-no-repeat bgi-position-center bgi-size-cover" style="background-image: url('@quest.Img')">
                    <!--begin::Image-->
                    <!--end::Image-->
                    <!--begin::Card-->
                    <div class="card card-custom w-auto w-md-300px w-lg-auto w-xxl-400px ml-auto m-10">
                        <!--begin::Card Body-->
                        <div class="card-body px-12 py-10">
                            <h3 class="font-weight-bolder font-size-h2 mb-1"><a href="#" class="text-dark-75">@quest.Name</a></h3>
                            <div class="text-primary font-size-h4 mb-9">@quest.Price ₽</div>
                            @*<div class="font-size-sm mb-8">@((MarkupString)quest.Description)</div>*@
                            <!--begin::Info-->
                            <div class="d-flex mb-3">
                                <span class="text-dark-50 flex-root font-weight-bold">Время:</span>
                                <span class="text-dark flex-root font-weight-bold">@quest.TravelTime.ToString("HH:mm")</span>
                            </div>
                            <div class="d-flex mb-3">
                                <span class="text-dark-50 flex-root font-weight-bold">Дистанция:</span>
                                <span class="text-dark flex-root font-weight-bold">@quest.Distance</span>
                            </div>

                            <!--end::Info-->
                        </div>
                        <!--end::Card Body-->
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-md-6">
                                    <NavLink href="@detailsLink" class="btn btn-light-primary font-weight-bold btn-block mb-4 mb-xxl-0 mb-xl-0 mb-md-0" Match="NavLinkMatch.All">
                                        Подробно
                                    </NavLink>
                                </div>
                                <div class="col-md-6">
                                    <button class="btn btn-outline-success font-weight-bold btn-block" @onclick="@(e => BuyGame(quest))">
                                        Играть
                                    </button>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                    <!--end::Card-->
                </div>
                <!--end::Card Body-->
            </div>
        </div>
    }

</div>

@code
{
    private List<Quests.Shared.Entities.Models.Quest> Quests { get; set; } = new List<Quests.Shared.Entities.Models.Quest>();

    protected override async Task OnInitializedAsync()
    {
        Quests = await QuestDataService.GetAll();

    }

    protected async Task BuyGame(Quests.Shared.Entities.Models.Quest quest)
    {
        var user = await UsersDataService.GetUserInfo();

        if (quest.Price > user.Points)
        {
            var myQuests = await MyQuestDataService.Get();
            if (myQuests.FirstOrDefault(x => x.QuestId == quest.Id) != null)
            {
                NavManager.NavigateTo("/myQuests");
            }
            else
            {
                NavManager.NavigateTo("/payment/" + (quest.Price - user.Points));
            }

        }

        else
        {


            var result = await SweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Вы уверены?",
                Text = "C вашего счета будет списано "+quest.Price+" очков",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Да, хочу пройти квест!",
                CancelButtonText = "Нет, отменить игру"
            });

            if (!string.IsNullOrEmpty(result.Value))
            {
                await MyQuestDataService.Add(quest);
                NavManager.NavigateTo("/myQuests");
            }

        }


    }
}
